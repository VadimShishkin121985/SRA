name: Test and Report

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install allure-pytest

    - name: Run tests with pytest and generate Allure report
      run: |
        mkdir -p allure-results
        pytest tests/ -v --alluredir=allure-results --allure-features --allure-stories --allure-epics
      continue-on-error: true
      env:
        API_KEY: ${{ secrets.API_KEY }}

    - name: Debug Allure Results
      run: |
        ls -la allure-results/
        echo "Contents of allure-results directory:"
        find allure-results -type f

    - name: Store allure results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results/
        retention-days: 1
        if-no-files-found: error

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Download Allure and Set Up
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          sudo tar -zxvf allure-2.23.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
          allure --version

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Debug Downloaded Artifacts
        run: |
          ls -la
          echo "Contents of current directory:"
          find . -type f
          echo "Contents of allure-results:"
          ls -la allure-results/

      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o _site
          echo "Allure report generated in _site directory"

      - name: Store generated report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: _site
          path: _site
          retention-days: 1
          if-no-files-found: error

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: _site
          path: _site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9