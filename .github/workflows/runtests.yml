name: Automated tests

on:
  push

permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: |
          ARTIFACT_ID=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts?name=allure-results" | \
          python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") && \
          curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts/$ARTIFACT_ID/zip" \
          -o artifacts.zip && \
          REPORT_ID=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts?name=github-pages" | \
          python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") && \
          curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts/$REPORT_ID/zip" \
          -o pages.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 10

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Run tests
        run: |
          pytest --maxfail=3 --disable-warnings -v --alluredir=allure-results
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 10
          overwrite: true

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Setup Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          sudo tar -zxvf allure-2.23.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
          allure --version  # Проверка установленной версии Allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Generate Allure report
        run: |
          echo "Generating Allure report..."
          allure generate -c allure-results -o _site
          echo "Checking if _site directory exists..."
          ls -la _site || echo "_site directory does not exist"
          ls -la allure-results || echo "allure-results directory does not exist"
      - name: Store generated report
        run: |
          if [ -d "_site" ]; then
            echo "Directory _site exists, proceeding to upload"
          else
            echo "Directory _site does not exist, exiting with error"
            exit 1
          fi
        uses: actions/upload-artifact@v4
        with:
          name: _site-${{ github.run_id }}-${{ github.run_number }}
          path: _site
          retention-days: 10

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Check _site directory before upload
        run: ls -la _site || echo "_site directory does not exist before upload"
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          name: github-pages
          path: _site/
          retention-days: 1
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}