name: Automated tests

on:
  push

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  fetch-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Fetch and Handle Artifact
        run: |
          set -e

          # Fetch artifact IDs
          ARTIFACT_ID=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts" \
            | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          
          if [ -z "$ARTIFACT_ID" ]; then
            echo "No artifact found with the name 'test-results'"
            exit 1
          fi
          
          echo "Artifact ID: $ARTIFACT_ID"
          
          # Download the artifact
          response_code=$(curl -L -s -w "%{http_code}" -o test-results.zip \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: ***" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts/$ARTIFACT_ID/zip")
          
          # Check for artifact expiration or other issues
          if [ "$response_code" -eq 410 ]; then
            echo "Artifact 'test-results' has expired. Continuing without it."
            touch test-results.zip
          elif [ "$response_code" -ne 200 ]; then
            echo "Failed to download artifact. HTTP code: $response_code"
            exit 1
          fi
          
          echo "Contents of test-results.zip:"
          head -c 200 test-results.zip
          file test-results.zip
          
          # Check if the file is a valid ZIP
          if ! unzip -t test-results.zip >/dev/null 2>&1; then
            echo "The downloaded file is not a valid ZIP file or is empty."
            exit 1
          fi
          
          # Unzip the artifact
          mkdir -p test-results
          unzip test-results.zip -d test-results || echo "Unzip failed or no files extracted."
        shell: bash

      - name: Store downloaded test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results
          retention-days: 10

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Run tests
        run: |
          pytest --maxfail=3 --disable-warnings -v --alluredir=allure-results
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 10

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - run: ls _site # Отладка содержимого _site
      - name: Store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path: _site
          retention-days: 10

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - run: ls _site # Отладка перед загрузкой
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9