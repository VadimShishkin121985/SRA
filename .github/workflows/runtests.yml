name: Automated tests

on:
  workflow_dispatch:
    inputs:
      test_file:
        description: 'Test file to run (Test1.py, Test2.py, Test3.py, or all)'
        required: true
        default: 'all'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          ARTIFACT_ID=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts?name=allure-results" \
          | python -c "import sys, json; artifacts = json.load(sys.stdin)['artifacts']; print(artifacts[0]['id']) if artifacts else '';") \
          && if [ -z "$ARTIFACT_ID" ]; then echo "No allure-results artifact found"; exit 1; fi \
          && echo "Allure results artifact ID: $ARTIFACT_ID" \
          && curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts/$ARTIFACT_ID/zip \
          -o artifacts.zip
      - run: |
          REPORT_ID=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts?name=github-pages" \
          | python -c "import sys, json; artifacts = json.load(sys.stdin)['artifacts']; print(artifacts[0]['id']) if artifacts else '';") \
          && if [ -z "$REPORT_ID" ]; then echo "No github-pages artifact found"; exit 1; fi \
          && echo "GitHub pages artifact ID: $REPORT_ID" \
          && curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/VadimShishkin121985/SRA/actions/artifacts/$REPORT_ID/zip \
          -o pages.zip
      - run: |
          if [ -f artifacts.zip ]; then
            mkdir allure-results && unzip artifacts.zip -d allure-results
          else
            echo "Artifacts.zip not found"
          fi
      - run: |
          if [ -f pages.zip ]; then
            mkdir old_pages pages_history && unzip pages.zip -d old_pages
          else
            echo "Pages.zip not found"
          fi
      - run: ls old_pages # Вывести список файлов в old_pages для отладки
      - run: |
          if [ -f old_pages/artifact.tar ]; then
            tar -xvf old_pages/artifact.tar -C pages_history
          else
            echo "artifact.tar not found, skipping tar extraction."
          fi
      - run: |
          if [ -d pages_history/history ]; then
            cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
          else
            echo "No history directory found in pages_history, skipping copy."
          fi
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 10

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.test_file }}" == "all" ]; then
            pytest --maxfail=3 --disable-warnings -v --alluredir=allure-results
          else
            pytest --maxfail=3 --disable-warnings -v --alluredir=allure-results ${{ github.event.inputs.test_file }}
          fi
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 10

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path: _site
          retention-days: 10

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9